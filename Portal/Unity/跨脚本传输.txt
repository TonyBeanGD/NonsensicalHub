一.单例模式
被调用脚本
	public static 【类名】 【参数名】;
	void Awake()
    	{
        	【参数名】 = this;
    	}
调用脚本
	【要赋予的量】=【类名】.【参数名】.【变量名】;
	或者
	【类名】.【参数名】.【方法名】;
二.实例化时调用
	GameObject 【GameObject名】=Instantiate(,,);
	此时即可使用GetComponent<【类名】>().【变量名或方法名】对其进行调用
三.Find
	GameObject 【GameObject名】=GameObject.Find("【要寻找的GameObject名】");
	或者
	GameObject 【GameObject名】=GameObject.FindWithTag("【要寻找的GameObject的tag名】");
	当有多个要寻找的GameObject时
	GameObject[] 【GameObject数组名】 g = GameObject.FindGameObjectsWithTag("【要寻找的GameObject的tag名】");

实例（单例模式）：
脚本A:
using UnityEngine;

public class Test1 : MonoBehaviour
{
    public static Test1 ts;
    public int i = 1;
    public int add(int a, int b)
    {
        return (a + b);
    }
    
    void Start()
    {
        ts = this;
    }

    void Update()
    {

    }
}
脚本B：
using UnityEngine;

public class Test2 : MonoBehaviour
{
    int a, b, c;
    void Start()
    {
        a = Test1.ts.i;
        b = Test1.ts.i;
        c = Test1.ts.add(a, b);
        Debug.Log(c);
    }

    void Update()
    {

    }
}

