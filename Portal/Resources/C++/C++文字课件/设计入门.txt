/*-----------------本节课内容------------------------------
    C++程序设计入门二 
    1、编程语言的构成
    2、变量
	3、常用运算符
	4、C语言的输入输出
-----------------------------------------------------------
 回顾：--- 从初学者的角度，编程是什么一回事？
        基于 程序猿--编程语言--计算机的主线，总结下编程的含义：
	程序书写编程语言表达自己的思想/逻辑，在经过工具(VS2013)翻译后，让计算机能够执行。
	   
	    通过演示，熟悉了怎么使用VS2013创建代码工程，知道 程序猿 是基于 IDE的代码工程 在计算机上进行编程。
	   
	    了解了：在高级编程语言C/C++ 中，能够人性化表示 编程所需的：数字、字符、字符串。
	为了解决更复杂的问题，给出了 存储临时值 所对应的概念：变量，并根据实际应用场景，
    给出变量的类型说明。
	
	    今天我们将对上述内容，从编程的角度进行解释和补充，有些地方会快速的过。

一、编程语言的构成  	
        字符是组成语言的最基本元素。C++语言字符有：字母、数字、空白符、标点和特殊字符组成。
	分为6类：常量、注释符、关键字、标识符、运算符、分隔符。
	
	一个程序就是有以上6中字符编写 并编译出来的，下面对那些字符对应哪些类型进行简要说明。
	A、常量 -- 不可改变的量
	   数字常量  ---  10，3.14            //整数 和 小数
	   字符常量  ---  'a'                 //单引号+字符
	   字符串常量 --- "shouwangxianfeng"  //由一对双引号括起来的零个或多个字符序列
	                  
	   转义字符 ---- 反斜杠     '\\'   --- "a\n c\\"
	                 换行符     '\n' 
					 水平制表键 '\t' 															
					 单引号     '\''  
					 双引号     '\"'
					 空字符     '\0'  ---重要
	   
	   宏定义常量 ----  #define PI 3.14
	   符号常量   ----- 见下文
	   
	B、注释符 --- 对代码进行说明的字符，不是代码
	    //我是注释 ---- 一行注释
	    /*         ---- 多行注释
		   我是注释行1
		   我是注释行2
	    * /
	
	C、关键字 --- 具有特定意义的单词，变量名不能与之相同。
	    1) 类型说明符  - 单词 --- 说明数据类型的一个符号
	       用于定义，说明 变量、函数和其他数据结构的类型。比如：int，double
	       
		   目前需掌握：
			   关键字 ------------------------------- 含义   ------------------------------ 相关
			   (signed) int long short       定义有符号 整型、长整型、短整型 变量        int的 -2^31 ~ 2^31-1 
			   unsigned int                  无符号 整型                                0 ~ 2^32-1
		       float double                  单双精度浮点数                             7位/16位的精度
	           char                          字符型                                     'A'/转义字符
	
	    2) 语句定义符 -- 语句 ： 英文分号;结尾  // 语句定义符号
		   用于表示一个语句的功能。比如：if else 定义了一个条件语句
		   部分后续会接触到的常见语句定义符
		     if else --  流程控制语句 begin
             while
             do while
             for			 
		     switch default -- 流程控制语句 end
			 
			 break
			 continue
			 return
			 
		3) 预处理命令字
		   用于表示一个预处理命令。比如：#include 包含
	  
	D、标识符
       程序中使用的变量名、函数名、标号统称为标识符。
       标识符原则：
			1)、字母、数字、下划线组成的字符串
			2)、不能以数字打头
			3)、不能使用关键字作为标识符
			4)、具有自解释性，长度适中
			5)、大小写敏感
			6)、同一作用域内，标识符不能重名。 //一对{}内
		
二、变量和数据类型	
	1、定义：
        变量的定义：		
		   类型说明符 变量名标识符1，变量名标识符2，变量名标识符...;   //变量名是标识符
			  比如：int a,b,c;
			  
		   注意：变量在使用前需要先声明定义，在程序执行过程中可以改变其值。
	             定义变量时，可以一次声明和定义多个变量
				 
	    数据类型的概念：
		    变量a的数据类型是 int型 或 int型的变量a
	
	2、变量的意义
			A、变量 标识了一个桶，桶中通常用来 装对应数据类型的值。
			B、变量的值可以被修改，被赋值。
			C、变量的类型 决定了该桶的大小，以及该桶中的值 能参与的运算。  //重要
		       PS：桶 在计算机中是 指一块内存。
	   
	3、不同数据类型的变量 
        A、整型 --- int/long/short/long long/unsigned int等
			  int a1； //垃圾值
			  a1 = 0;
			  
			  int a2 = 0； //变量定义时赋初值
			  
			  int a3,b3;
			  a3 = 0;
			  b3 = 0;
			  
			  int a4 = 0, b4 = 0;
			  
			  不推荐：int a = 0;
		  
			注意： 
			              十进制      八进制
			   十个苹果   10          12    （1代表1个8   2代表2    8 + 2 = 10）    
				A、整型常量，在计算机中 可以用十进制、八进制或十六进制表示，并有对应的标识特征。
					  24 --- 缺省状态，十进制
					  030 -- 前面加0的数字，被解析为八进制树
					  0x3 -- 前面加0x的数字，被解析为十六进制树
					  
				B、整型常量在尾部
				   加"l"或"L"，代表数字为long型 ，比如: 3L；
				   加"u"或"U"，代表数字为无符号型,比如: 3U；

	    B、浮点型 ---- float/double/long double
	       float f1 = 0.0f;   //精度一般是7
		   double d1 = 0.0;   //有效数字一般是16
		   
		   注意: 浮点常量的默认类型是double
		   
		   在计算机中，浮点型常量的表示方法：
		    A、普通小数形式
		      3.14159
			  2.14f        //注意1：尾部加f，代表为float
			  1.14DL
			  .14f         //注意2
			  1.f
			  
			B、指数形式
			   在小数后面加"E"或"e"
		       3.0E+8; //3 * 10的8次方
		       2.5e-3; // 2.5*10的-3次方
			   
		C、字符型 ---- char
			   char c1 = 'a';
			   char c2 = 'A';
			   char c3 = '\0';
		   
		   注意：字符变量 所存放的值 为字符的ascii编码数值。
		   
		D、字符串 ---- 字符串数组 或 字符指针
               char array[10] = "Hello";
               char* ptr = "Hello";
		
		E、（新增）布尔类型  ---- bool
		    布尔类型 对应了 判断条件是否成立，真：成立；假：不成立
		   
		    bool类型的常量：true、false
		    布尔类型的变量的值，只有false 和 true。 //真和假
		     
  		    注意：在C++中，将 非零值 和 true，都判断为真
			               将 0      和 false，都判断为假。
			      
	    F、（新增）符号常量 
           在定义变量时，在变量名前面加关键词const，此时变量称为符号常量
           const double attack = 100.0;
		   或 double const attack = 100.0;
		   
		   符号常量在定义时一定要赋初始值，后续程序中不能改变其值。
		   
三、常用运算符	
        运算符用于执行程序代码运算，会针对一个以上操作数来进行运算。
	
	简单来说：使用 运算符 对 常量或变量 进行运算，得到结果。
	          可以理解为将 单词 组成 词组。 
	比如：int a = 0; a + 3;

	在C++中，运算符大致可以分为5种类型：
		赋值符号： = 
		算术运算符： +  -  *  /  %（求余）
		赋值运算符号：+=  -= *= %= 等
		逻辑运算符:  &&  ||   !
		关系运算符:  ==  !=  <  >   >=   <=
		
		自增自减操作符: ++   --
		条件操作符:     ?:
		位运算符:       &  |   ~   ^   <<   >>
		其他运算符:     *  &  ::   []
	
	这里，只讲解 赋值运算符和算术运算符，其他另讲。
		
    A、赋值符号 = 
	   用于赋值运算，将等号左边的操作数 的值 赋给 等号右边的操作数。
	    int a;
	    a = 0;  0为=的右操作数，a为=的左操作数。
	                   右值            左值
	    
		注意：
	         1、当左、右操作数的类型不同时，编译器会隐式进行转换，将右操作数转为左操作数。
	         2、左操作数：必须是左值（变量），右操作数为右值。
	
    B、算术运算符  +  -  * / %
	   注意：/ 除法运算符 对整数运算时，结果只取整数部分
	         % 求余/模运算符的操作数 只能是整型。
	
    C、赋值运算符 +=  -= *= %= 等
	   将赋值符号和运算符号结合使用。

	D、运算符的优先级和结合性
	
四、C语言的输入输出
1、C语言的输入
    格式化输入函数 scanf
	scanf("<格式化输入字符串>", <地址表>);
	A、函数功能
	   从控制台取得 字符串，然后根据 格式说明符，将对应位置的字符转为对应数据类型的值存入变量。
	   
	   char c = '\0';
	   scanf("%c",&c);  //取地址
	   
	   其中，"xxx"，称为格式化输入字符串， %c称为格式说明符。
	   
	   常用格式说明符：
		   %c 字符 
		   %d 带符号整数 
		   %f float 类型
		   %s 一串字符 
		   %lf double类型
	   
        另外，可以一次将多个值存到多个变量。
     	scanf("%c %c %d %d",&c1，&c1，&i2，&i2);    

    B、格式化的体现
・       1)、根据 格式化说明符，将控制台字符转为对应的类型的值
	       scanf("aaa %c bbb",&c); //从 格式化输入字符串 中按照%c的格式 抠出字符，并赋值给c
		   
	    2)、需按照 格式化输入字符串的 格式进行输入
	        scanf("aaa %c bbb",&c); //从 格式化输入字符串 中按照%c的格式 抠出字符，并赋值给c

2、C语言的输出	
   格式化输出函数 printf
   printf("<格式化输出字符串>", <变量表>);
   
	A、函数功能
	   将格式化字符串输出到控制台，期间。将变量 基于格式说明符 填充到 格式化输出字符串对应的位置。
	   char c = 'a';
	   printf("%c",c);  
	   printf("%d",c); 
		
	   其中，"xxx"，称为格式化输出字符串， %c/%d称为格式说明符。
	   
      另外，可以一次将多个变量输出。
     	printf("%c %c %d %d",c1，c1，i2，i2); //从前往后，一一对应

    B、格式化的体现
・       1)、根据 格式化说明符，将变量转为对应的类型的值，然后输出到控制台
		   
	    2)、按照 格式化输出字符串的形式 输出
	        printf("aaa %c bbb",c);   //将变量的值填充到 格式化输出字符串 中 格式说明符的位置

        3)、格式说明符，还可以进行修饰
		    宽度修饰：
				一个位于一个%和格式化命令间的整数担当着一个最小字段宽度说明符,
				当宽度不足时，默认补空格；如果你想填充0,在最小字段宽度说明符前放置0。
				比如：
					int a  = 10;
					printf("%4d",c);   //右对齐
					printf("%04d",c);
					printf("%-4d",c);  //左对齐
			
            精度修饰：%f及其他
				float fNum = 123.45678f;
				printf("%.5f",fNum);  
				printf("%12.5f",fNum);  
				printf("%-12.5f",fNum);  	   
*/